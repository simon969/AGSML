package agsmlGenerator;

import java.io.*;
import javax.swing.SwingUtilities;
import javax.swing.JFileChooser;
import javax.swing.JComboBox;
import javax.swing.filechooser.FileNameExtensionFilter;
import agsml.AGS_Converter;
import agsml.AGS_Server;
import agsml.AGS_Client;
import agsml.AGS_Dictionary;
import agsml.AGS_DataStructure;
import java.awt.event.WindowEvent;
import java.util.logging.Handler;
import java.util.logging.Level;
import java.util.ArrayList;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;
import java.util.Properties;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author thomsonsj
 */
public class AGSMLGeneratorGUI extends javax.swing.JFrame {
   
    private JFileChooser fc;
    static private final String newline = "\n";
    private AGS_Server ags_server;
    private ArrayList<AGS_Client> ags_clients = new ArrayList<AGS_Client>();
    private Properties props;
    
    /** 
     * Creates new form jfMainForm
     */
    public AGSMLGeneratorGUI() {
       initComponents();
       initCustomOutputStream();
       initDefaultFilesFolders();
      // initFileSetTest109();
      
       
    }
    
    void initDefaultFilesFolders() {
       
        loadProperties();
        
        this.jTextInputSource.setText(props.getProperty("InputSource"));
        this.jTextOutputFolder.setText(props.getProperty("OutputFoldere"));
        this.jTextDictionaryFile.setText(props.getProperty("DictionaryFile"));
        this.jTextLocalPort.setText(props.getProperty("LocalPort"));
        this.jTextServer.setText(props.getProperty("Server"));
        this.jTextServerPort.setText(props.getProperty("ServerPort"));
        
        updateComboBoxAGSDictionaryId();
        updateComboBoxAGSDataStructureId();
        
    }
    
    String getJarFolder() {
        try {
        return new File(AGSMLGenerator.class.getProtectionDomain().getCodeSource().getLocation().toURI()).getAbsolutePath();
        } catch (Exception e) {
            return "";
            
        }
    }
    public void loadProperties() {
    try {
     
    //to load application's properties, we use this class
    props = new Properties();
    props.setProperty("jar_folder",getJarFolder());
 
    FileInputStream file;

    //the base folder is ./, the root of the main.properties file  
    String path = "./AGSMLConverter.properties";

    //load the file handle for main.properties
    file = new FileInputStream(path);

    //load all the properties from this file
    props.load(file);

    //we have loaded the properties, so close the file handle
    file.close();
     } catch (Exception e) {
     
        }
    }
    
    public void setProperties(Properties p) {
         props = p;
    }
    private void initCustomOutputStream() {
    
            PrintStream printStream = new PrintStream(new JTextAreaOutputStream(log));
            System.setOut(printStream);
            System.setErr(printStream);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbuttonGenerate = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButtonIProcessFile = new javax.swing.JButton();
        jTextProcessFile = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jTextInputSource = new javax.swing.JTextField();
        jButtonInputData = new javax.swing.JButton();
        jButtonOutputFolder = new javax.swing.JButton();
        jTextOutputFolder = new javax.swing.JTextField();
        jButtonDictionaryFile = new javax.swing.JButton();
        jComboBoxAGSDictionaryId = new javax.swing.JComboBox<>();
        jComboBoxAGSMLDataStructureId = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextDictionaryFile = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jTextLocalPort = new javax.swing.JTextField();
        jButtonStartServer = new javax.swing.JButton();
        jButtonStopServer = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButtonClientSave = new javax.swing.JButton();
        jTextServer = new javax.swing.JTextField();
        jTextServerPort = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        log = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AGS to XML Conversion Tool");

        jbuttonGenerate.setText("Generate");
        jbuttonGenerate.setToolTipText("");
        jbuttonGenerate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbuttonGenerateMouseClicked(evt);
            }
        });
        jbuttonGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttonGenerateActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jButtonIProcessFile.setText("...");
        jButtonIProcessFile.setToolTipText("");
        jButtonIProcessFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIProcessFileActionPerformed(evt);
            }
        });

        jTextProcessFile.setText("...ProcessFile");
        jTextProcessFile.setToolTipText("");
        jTextProcessFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextProcessFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextProcessFile, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButtonIProcessFile)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonIProcessFile)
                    .addComponent(jTextProcessFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(143, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("SQL Process File", jPanel1);

        jTextInputSource.setText("...InputSource");
        jTextInputSource.setToolTipText("");
        jTextInputSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextInputSourceActionPerformed(evt);
            }
        });

        jButtonInputData.setText("...");
        jButtonInputData.setToolTipText("");
        jButtonInputData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInputDataActionPerformed(evt);
            }
        });

        jButtonOutputFolder.setText("...");
        jButtonOutputFolder.setToolTipText("");
        jButtonOutputFolder.setName(""); // NOI18N
        jButtonOutputFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOutputFolderActionPerformed(evt);
            }
        });

        jTextOutputFolder.setText("...OutputFolder");
        jTextOutputFolder.setToolTipText("");

        jButtonDictionaryFile.setText("...");
        jButtonDictionaryFile.setToolTipText("");
        jButtonDictionaryFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDictionaryFileActionPerformed(evt);
            }
        });

        jComboBoxAGSDictionaryId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBoxAGSMLDataStructureId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("AGSDictionaryId");

        jLabel2.setText("AGSMLDataStructureId");

        jTextDictionaryFile.setText("...DictionaryFile");
        jTextDictionaryFile.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextOutputFolder, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxAGSDictionaryId, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxAGSMLDataStructureId, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jTextDictionaryFile)
                    .addComponent(jTextInputSource))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonInputData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonOutputFolder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonDictionaryFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonInputData)
                    .addComponent(jTextInputSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOutputFolder)
                    .addComponent(jTextOutputFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDictionaryFile)
                    .addComponent(jTextDictionaryFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBoxAGSDictionaryId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxAGSMLDataStructureId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        jTabbedPane1.addTab("AGS to AGSML", jPanel2);

        jTextLocalPort.setText("...port");

        jButtonStartServer.setText("Start");
        jButtonStartServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartServerActionPerformed(evt);
            }
        });

        jButtonStopServer.setText("Stop");
        jButtonStopServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStopServerActionPerformed(evt);
            }
        });

        jLabel3.setText("Localhost:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(553, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonStartServer, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonStopServer, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(127, 127, 127)
                .addComponent(jTextLocalPort, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextLocalPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(jButtonStartServer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonStopServer)
                .addGap(10, 10, 10))
        );

        jTabbedPane1.addTab("Server", jPanel3);

        jButtonClientSave.setText("Save");
        jButtonClientSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClientSaveActionPerformed(evt);
            }
        });

        jTextServer.setText("...server");

        jTextServerPort.setText("...port");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextServer, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 229, Short.MAX_VALUE)
                .addComponent(jButtonClientSave)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonClientSave)
                    .addComponent(jTextServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(143, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Client", jPanel4);

        log.setColumns(20);
        log.setRows(5);
        jScrollPane1.setViewportView(log);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbuttonGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbuttonGenerate)
                    .addComponent(jButtonCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbuttonGenerateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbuttonGenerateMouseClicked

           
    }//GEN-LAST:event_jbuttonGenerateMouseClicked
    private int initFileSetTest101() {
        
        this.jTextOutputFolder.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\kmlShaftPoints\\Shafts2.xml");
        this.jTextProcessFile.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\kmlShaftPoints\\Process_File_ShaftPoints.xml");
        this.jTextInputSource.setText("jdbc:sqlserver://UKLON3SQ033;instanceName=CORPDB_2012;databaseName=tideway_c410_all;integratedSecurity=true");

      // this.InputSource.setText("jdbc:sqlserver://UKCRD1LT40672;instanceName=SQLEXPRESS11;databaseName=tideway_c410_all;integratedSecurity=true");
      // this.InputSource.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\tideway_c410_all.gpj");
      
       return 1;
    }
    private int initFileSetTest102() {
        
        this.jTextOutputFolder.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\Monitoring Points KML\\kml_test1.kml");
        this.jTextProcessFile.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\Monitoring Points KML\\process_file.xml");
        this.jTextInputSource.setText("jdbc:sqlserver://UKLON3SQ033;instanceName=CORPDB_2012;databaseName=tideway_Groundwater;integratedSecurity=true");
     //  this.InputSource.setText("jdbc:sqlserver://UKLON3SQ033;instanceName=CORPDB_2012;databaseName=tideway_c410_all;integratedSecurity=true");

      // this.InputSource.setText("jdbc:sqlserver://UKCRD1LT40672;instanceName=SQLEXPRESS11;databaseName=tideway_c410_all;integratedSecurity=true");
      // this.InputSource.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\tideway_c410_all.gpj");
      
       return 1;
    } 
    private int initFileSetTest103() {
        
        this.jTextOutputFolder.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\xmlBoreholesByShaft\\agsml_test2\\test2");
        this.jTextProcessFile.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\xmlBoreholesByShaft\\agsml_test2\\Process_File.xml");
        this.jTextInputSource.setText("jdbc:sqlserver://UKLON3SQ033;instanceName=CORPDB_2012;databaseName=tideway_c410_all;integratedSecurity=true");
        this.jTextDictionaryFile.setText("C:\\Users\\thomsonsj\\Documents\\NetBeansProjects\\AGSML\\schemas\\DictionaryAgsml_0.0.6.xml");
        updateComboBoxAGSDictionaryId();
        updateComboBoxAGSDataStructureId();
      // this.InputSource.setText("jdbc:sqlserver://UKCRD1LT40672;instanceName=SQLEXPRESS11;databaseName=tideway_c410_all;integratedSecurity=true");
      // this.InputSource.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\tideway_c410_all.gpj");
      
       return 1;
    } 
    private int initFileSetTest104() {
        
        this.jTextOutputFolder.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\xmlBoreholesByShaft\\agsml_test2\\test2.xml");
        this.jTextProcessFile.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\xmlBoreholesByShaft\\agsml_test2\\Process_File.xml");
        this.jTextInputSource.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\tideway_c410_all.mdb");
        this.jTextDictionaryFile.setText("C:\\Users\\thomsonsj\\Documents\\NetBeansProjects\\AGSML\\schemas\\DictionaryAgsml_0.0.6.xml");
        updateComboBoxAGSDictionaryId();
        updateComboBoxAGSDataStructureId();
      // this.InputSource.setText("jdbc:sqlserver://UKCRD1LT40672;instanceName=SQLEXPRESS11;databaseName=tideway_c410_all;integratedSecurity=true");
      // this.InputSource.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\tideway_c410_all.gpj");
      
       return 1;
    } 
    private int initFileSetTest105() {
        
        this.jTextOutputFolder.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\xmlBoreholesByShaft\\agsml_test2\\test2");
        this.jTextProcessFile.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\xmlBoreholesByShaft\\agsml_test2\\Process_File.xml");
        this.jTextInputSource.setText("jdbc:sqlserver://UKCRD1LT40672;instanceName=SQLEXPRESS11;databaseName=tideway_c410_all;integratedSecurity=true");
        this.jTextDictionaryFile.setText("C:\\Users\\thomsonsj\\Documents\\NetBeansProjects\\AGSML\\schemas\\DictionaryAgsml_0.0.6.xml");
        updateComboBoxAGSDictionaryId();
        updateComboBoxAGSDataStructureId();
      // this.InputSource.setText("jdbc:sqlserver://UKCRD1LT40672;instanceName=SQLEXPRESS11;databaseName=tideway_c410_all;integratedSecurity=true");
      // this.InputSource.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\tideway_c410_all.gpj");
      
       return 1;
    } 

    private int initFileSetTest106() {
        
        this.jTextProcessFile.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\xmlBoreholesByShaft\\agsml_test3\\Process_File101.xml");
        updateComboBoxAGSDictionaryId();
        updateComboBoxAGSDataStructureId();
      // this.InputSource.setText("jdbc:sqlserver://UKCRD1LT40672;instanceName=SQLEXPRESS11;databaseName=tideway_c410_all;integratedSecurity=true");
      // this.InputSource.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\tideway_c410_all.gpj");
      
       return 1;
    } 
    private int initFileSetTest107() {
        
        this.jTextProcessFile.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\kmlShaftPoints\\Process_File_ShaftPoints2.xml");
        updateComboBoxAGSDictionaryId();
        updateComboBoxAGSDataStructureId();
      // this.InputSource.setText("jdbc:sqlserver://UKCRD1LT40672;instanceName=SQLEXPRESS11;databaseName=tideway_c410_all;integratedSecurity=true");
      // this.InputSource.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\tideway_c410_all.gpj");
      
       return 1;
    } 
    private int initFileSetSilvertownTunnel() {
        
        this.jTextOutputFolder.setText("C:\\Users\\ThomsonSJ\\Documents\\2017\\Silvertown Tunnel\\100 GI Data\\gINT-XML3");
        this.jTextProcessFile.setText("C:\\Users\\thomsonsj\\Documents\\2017\\Silvertown Tunnel\\100 GI Data\\gINT-XML3\\Process_File_ByProject.xml");
        this.jTextInputSource.setText("C:\\Users\\ThomsonSJ\\Documents\\2017\\Silvertown Tunnel\\100 GI Data\\gINT\\silvertown_ags4.gpj");
        this.jTextDictionaryFile.setText("C:\\Users\\thomsonsj\\Documents\\NetBeansProjects\\AGSML\\schemas\\DictionaryAgsml_0.0.10.xml");
        updateComboBoxAGSDictionaryId();
        updateComboBoxAGSDataStructureId();
      // this.InputSource.setText("jdbc:sqlserver://UKCRD1LT40672;instanceName=SQLEXPRESS11;databaseName=tideway_c410_all;integratedSecurity=true");
      // this.InputSource.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\tideway_c410_all.gpj");
      
       return 1;
    } 
    private int initFileSetTest108() {
        
        this.jTextOutputFolder.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\RW\\gINT\\xmlBoreholes\\2017-05-19");
        this.jTextProcessFile.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\RW\\gINT\\xmlBoreholes\\2017-05-23\\Process_File.xml");
      //  this.jTextProcessFile.setText("C:\\Users\\thomsonsj\\Documents\\2017\\Silvertown Tunnel\\100 GI Data\\gINT-XML2\\Process_File3.xml");
        this.jTextInputSource.setText("C:\\Users\\thomsonsj\\Documents\\2016\\\\TTT Central C410\\RW\\gINT\\xmlBoreholes\\2017-05-19");
        this.jTextDictionaryFile.setText("C:\\Users\\thomsonsj\\Documents\\NetBeansProjects\\AGSML\\schemas\\DictionaryAgsml_0.0.10.xml");
        updateComboBoxAGSDictionaryId();
        updateComboBoxAGSDataStructureId();
      // this.InputSource.setText("jdbc:sqlserver://UKCRD1LT40672;instanceName=SQLEXPRESS11;databaseName=tideway_c410_all;integratedSecurity=true");
      // this.InputSource.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\tideway_c410_all.gpj");
      
       return 1;
    }  
        private int initFileSetTest109() {
        
        this.jTextOutputFolder.setText("");
        this.jTextProcessFile.setText("");
      //  this.jTextProcessFile.setText("C:\\Users\\thomsonsj\\Documents\\2017\\Silvertown Tunnel\\100 GI Data\\gINT-XML2\\Process_File3.xml");
        this.jTextInputSource.setText("C:\\Users\\ThomsonSJ\\Downloads\\107971\\E7037A_Burton SWWM_Final Factual Report AGS4.ags");
        this.jTextDictionaryFile.setText("C:\\Users\\thomsonsj\\Documents\\NetBeansProjects\\AGSML\\schemas\\DictionaryAgsml_0.0.11.xml");
       this.jTextLocalPort.setText("1045");
        updateComboBoxAGSDictionaryId();
        updateComboBoxAGSDataStructureId();
      // this.InputSource.setText("jdbc:sqlserver://UKCRD1LT40672;instanceName=SQLEXPRESS11;databaseName=tideway_c410_all;integratedSecurity=true");
      // this.InputSource.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\tideway_c410_all.gpj");
      
       return 1;
    } 
        
    private int initFileSetTest110() {
        
        this.jTextOutputFolder.setText("");
        this.jTextProcessFile.setText("");
      //  this.jTextProcessFile.setText("C:\\Users\\thomsonsj\\Documents\\2017\\Silvertown Tunnel\\100 GI Data\\gINT-XML2\\Process_File3.xml");
        this.jTextInputSource.setText("C:\\Users\\simon.DORSETRECLAIM\\Downloads\\107971\\E7037A_Burton SWWM_Final Factual Report AGS4.ags");
        this.jTextDictionaryFile.setText("C:\\Users\\simon.DORSETRECLAIM\\Documents\\NetBeansProjects\\AGSML\\schemas\\DictionaryAgsml_0.0.11.xml");
        updateComboBoxAGSDictionaryId();
        updateComboBoxAGSDataStructureId();
      // this.InputSource.setText("jdbc:sqlserver://UKCRD1LT40672;instanceName=SQLEXPRESS11;databaseName=tideway_c410_all;integratedSecurity=true");
      // this.InputSource.setText("C:\\Users\\thomsonsj\\Documents\\2016\\TTT Central C410\\gINT\\tideway_c410_all.gpj");
      
       return 1;
    }     
    JFileChooser init_FileChooser() {
        if (fc==null) {
            fc = new JFileChooser("./");
        }
        fc.removeChoosableFileFilter(fc.getFileFilter());
     
        return fc;
    }
            
    private int addAttributesToComboBox (NodeList nl, String AttributeName, JComboBox<String> jcb1 ) {
    
    try {
       for (int i=0; i <= nl.getLength();i++){
           Element el = (Element) nl.item(i);
           String s1 = el.getAttribute(AttributeName);
           if (s1.isEmpty()!=true) {
                jcb1.addItem(s1);
           }
       }
     
     return nl.getLength();    
    } 
    catch (Exception ex) {
     log.append(ex.getMessage());
     return -1;
    } 
   }
    
    private int FileExist(String FileName){
        try {
         File f1 = new File(FileName);
         if(f1.canRead()) { 
             return 1;
         } else {
             return -1;
         }}
        
        catch (Exception e) {
         return -1;
        }
    }
    private int FolderExist(String FolderName) {
        try {
         File f1 = new File(FolderName);
         if(f1.isDirectory()) 
             return 1;
         else
             return -1;
         }
        catch (Exception e) {
         return -1;
        }
    }
    private String FileExtention(String FileName){
        try {
        int i = FileName.lastIndexOf('.');
        if (i > 0) {
        return FileName.substring(i+1);
        } else
          return null;
        }
        
        catch (Exception e) {
         return null;
        }
    }
    private static String usingBufferedReader(String filePath) 
     // https://howtodoinjava.com/core-java/io/java-read-file-to-string-examples/       
    {
	StringBuilder contentBuilder = new StringBuilder();
	try (BufferedReader br = new BufferedReader(new FileReader(filePath))) 
	{

		String sCurrentLine;
		while ((sCurrentLine = br.readLine()) != null) 
		{
			contentBuilder.append(sCurrentLine).append("\n");
		}
	} 
	catch (IOException e) 
	{
		e.printStackTrace();
	}
	return contentBuilder.toString();
    }
    private void jbuttonGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttonGenerateActionPerformed
       
    
    // Use AGSMLConveter 
    if (jTabbedPane1.getSelectedIndex() == 0) {
        
        AGS_Converter ac = new AGS_Converter(); 
        ac.set_LoggerTextArea(log, Level.FINE);
        
        if (!jTextInputSource.getText().isEmpty() && !jTextInputSource.getText().equalsIgnoreCase("...InputSource")) {

           if (FileExist(jTextInputSource.getText()) == 1) { 
  
               String ext = FileExtention(jTextInputSource.getText());
               if (ext.equalsIgnoreCase("ags")) {
               ac.AGS_to_AGSML(jTextInputSource.getText(), 
                       jTextOutputFolder.getText(), 
                       jTextDictionaryFile.getText(), 
                       jComboBoxAGSDictionaryId.getSelectedItem().toString(), 
                       jComboBoxAGSMLDataStructureId.getSelectedItem().toString());     
               }

               if (ext.equalsIgnoreCase("mdb") || ext.equalsIgnoreCase("gpj")) { 
                ac.SQL_to_AGSML(jTextInputSource.getText(), 
                        jTextOutputFolder.getText(), 
                        jTextDictionaryFile.getText(), 
                        jComboBoxAGSDictionaryId.getSelectedItem().toString(), 
                        jComboBoxAGSMLDataStructureId.getSelectedItem().toString());
               }

           } else
              // try server string
               ac.SQL_to_AGSML(jTextInputSource.getText(), 
                       jTextOutputFolder.getText(), 
                       jTextDictionaryFile.getText(), 
                       jComboBoxAGSDictionaryId.getSelectedItem().toString(), 
                       jComboBoxAGSMLDataStructureId.getSelectedItem().toString());  
        }
    }
    
    // Use AGS_Converter with process file
    if (jTabbedPane1.getSelectedIndex() == 1) {
        AGS_Converter ac = new AGS_Converter(); 
        ac.set_LoggerTextArea(log, Level.FINE);
        
        if (!this.jTextProcessFile.getText().isEmpty() && !jTextProcessFile.getText().equalsIgnoreCase("...ProcessFile")) {
            ac.Process (jTextProcessFile.getText());
        }
    } 
    
    // Use localhost AGS_server
    if (jTabbedPane1.getSelectedIndex() == 2) {
        if (ags_server != null) {
            if (!jTextInputSource.getText().isEmpty() && !jTextInputSource.getText().equalsIgnoreCase("...InputSource")) {
               if (FileExist(jTextInputSource.getText()) == 1) { 

                   String ext = FileExtention(jTextInputSource.getText());
                   if (ext.equalsIgnoreCase("ags")) {
                      // String ags_data = usingBufferedReader (jTextInputSource.getText());
                       // if (ags_data.length()> 0) {
                            try {
                                int port = Integer.parseInt(jTextLocalPort.getText());
                            
                                AGS_Client ac =  new AGS_Client ("localhost", port);
                                ags_clients.add(ac);
                               // ac.setAGSData(ags_data);
                               ac.setAGSFile(jTextInputSource.getText());
                               ac.start();
                             //   ac.join();
                             //   String xml_data = ac.getXMLData();
                             //   log.append(xml_data);
                            }
                            
                            catch (Exception e) {
                               log.append(newline + e.getMessage());
                            }
                            
                        //}
                   }
               }
            }
        }
    }
      // Use foreign AGS_server
    if (jTabbedPane1.getSelectedIndex() == 3) {
          if (!jTextInputSource.getText().isEmpty() && !jTextInputSource.getText().equalsIgnoreCase("...InputSource")) {
               if (FileExist(jTextInputSource.getText()) == 1) { 

                   String ext = FileExtention(jTextInputSource.getText());
                   if (ext.equalsIgnoreCase("ags")) {
                      // String ags_data = usingBufferedReader (jTextInputSource.getText());
                       // if (ags_data.length()> 0) {
                            try {
                                int port = Integer.parseInt(jTextServerPort.getText());
                                String server =  jTextServer.getText();
                                AGS_Client ac =  new AGS_Client (server, port);
                                ags_clients.add(ac);
                               // ac.setAGSData(ags_data);
                               ac.setAGSFile(jTextInputSource.getText());
                               ac.start();
                             //   ac.join();
                             //   String xml_data = ac.getXMLData();
                             //   log.append(xml_data);
                            }
                            
                            catch (Exception e) {
                               log.append(newline + e.getMessage());
                            }
                            
                        //}
                   }
               }
            }
        }
        
    }//GEN-LAST:event_jbuttonGenerateActionPerformed
    private void updateComboBoxAGSDictionaryId (){
      try {  
          if (!jTextDictionaryFile.getText().isEmpty() && !jTextDictionaryFile.getText().equalsIgnoreCase("...DictionaryFile")) { 
              AGS_Dictionary agsd = new AGS_Dictionary(jTextDictionaryFile.getText());
              this.jComboBoxAGSDictionaryId.removeAllItems();
              addAttributesToComboBox(agsd.allDictionaryNodes(), "id", jComboBoxAGSDictionaryId);
          }
      }
      catch (Exception e) {
          log.append(newline + e.getMessage());
      }
}
         
    private void updateComboBoxAGSDataStructureId (){
        try {
              if (!jTextDictionaryFile.getText().isEmpty() && !jTextDictionaryFile.getText().equalsIgnoreCase("...DictionaryFile")) { 
                  AGS_DataStructure agsds = new AGS_DataStructure(jTextDictionaryFile.getText());
                  this.jComboBoxAGSMLDataStructureId.removeAllItems();
                  addAttributesToComboBox(agsds.allAGSDataStructureNodes(), "id", jComboBoxAGSMLDataStructureId);
              }
        }
        catch (Exception e) {
          log.append(newline + e.getMessage());
        }    
    }          
               
    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonDictionaryFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDictionaryFileActionPerformed

        try {
            init_FileChooser();

            fc.setMultiSelectionEnabled(false);
            fc.setDialogTitle("Select AGS Dictionary file");
            fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
            fc.setFileFilter(new FileNameExtensionFilter("AGS Dictionary(*.xml)", "xml"));
            int result =fc.showOpenDialog(this);

            if (result == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                this.jTextDictionaryFile.setText(file.getAbsolutePath());
                log.append("Opening Dictionary File: " + file.getName() + "." + newline);
                updateComboBoxAGSDictionaryId();
                updateComboBoxAGSDataStructureId();

            } else {
                log.append("Open command cancelled by user." + newline);
            }
            log.setCaretPosition(log.getDocument().getLength());
        }
        catch (Exception ex) {
            log.append(ex.getMessage());
        }
    }//GEN-LAST:event_jButtonDictionaryFileActionPerformed

    private void jButtonOutputFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOutputFolderActionPerformed
        try {

            init_FileChooser();

            fc.setMultiSelectionEnabled(false);
            fc.setDialogTitle("Select Output Folder");
            fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            int result =fc.showOpenDialog(this);

            if (result == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                this.jTextOutputFolder.setText(file.getAbsolutePath());
                //This is where a real application would open the file.
                log.append("Opening: " + file.getName() + "." + newline);
            } else {
                log.append("Open command cancelled by user." + newline);
            }
            log.setCaretPosition(log.getDocument().getLength());
        }
        catch (Exception ex) {
            log.append(ex.getMessage());
        }
    }//GEN-LAST:event_jButtonOutputFolderActionPerformed

    private void jButtonInputDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInputDataActionPerformed

        try {

            // if (e.getSource() == openButton) {

                init_FileChooser();

                fc.setMultiSelectionEnabled(false);
                fc.setDialogTitle("Select AGS Data Source");
                fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
                fc.setFileFilter(new FileNameExtensionFilter("AGS Data(*.ags;*.gpj;*.mdb)", "ags","gpj","mdb"));
                int result =fc.showOpenDialog(this);

                if (result == JFileChooser.APPROVE_OPTION) {
                    File file = fc.getSelectedFile();
                    this.jTextInputSource.setText(file.getAbsolutePath());
                    //This is where a real application would open the file.
                    log.append("Opening: " + file.getName() + "." + newline);
                } else {
                    log.append("Open command cancelled by user." + newline);
                }
                log.setCaretPosition(log.getDocument().getLength());
            }
            catch (Exception ex) {
                log.append(ex.getMessage());
            }

            //Handle save button action.
            // } else if (e.getSource() == saveButton)
    }//GEN-LAST:event_jButtonInputDataActionPerformed

    private void jTextInputSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextInputSourceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextInputSourceActionPerformed

    private void jTextProcessFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextProcessFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextProcessFileActionPerformed

    private void jButtonIProcessFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIProcessFileActionPerformed

        try {
            init_FileChooser();

            fc.setMultiSelectionEnabled(false);
            fc.setDialogTitle("Select Process file");
            fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
            fc.setFileFilter(new FileNameExtensionFilter("AGSML Process(*.agsml;*.xml)", "agsml","xml"));

            if (!this.jTextProcessFile.getText().isEmpty()) {
                File file = new File (this.jTextProcessFile.getText());
                fc.setSelectedFile(file);
            }

            int result =fc.showOpenDialog(this);

            if (result == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                this.jTextProcessFile.setText(file.getAbsolutePath());
                //This is where a real application would open the file.
                log.append("Opening: " + file.getName() + "." + newline);
            } else {
                log.append("Open command cancelled by user." + newline);
            }
            log.setCaretPosition(log.getDocument().getLength());
        }
        catch (Exception ex) {
            log.append(ex.getMessage());
        }
    }//GEN-LAST:event_jButtonIProcessFileActionPerformed

    private void jButtonStartServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartServerActionPerformed
        // TODO add your handling code here:
        int port = Integer.parseInt(jTextLocalPort.getText());
        
        if (ags_server != null ) {
            ags_server.shutdown();
            ags_server= null;
        }
        
        ags_server = new AGS_Server (port);
        
        ags_server.setAGSDictionary(jTextDictionaryFile.getText(),
                 jComboBoxAGSDictionaryId.getSelectedItem().toString());
        
        ags_server.setAGSDataStructure(jTextDictionaryFile.getText(),         
                 jComboBoxAGSMLDataStructureId.getSelectedItem().toString()); 
        ags_server.setLoggerTextArea(log, Level.FINE);
        ags_server.start();
        
    }//GEN-LAST:event_jButtonStartServerActionPerformed

    private void jButtonStopServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStopServerActionPerformed
        // TODO add your handling code here:
        ags_server.shutdown();
        ags_server= null;
    }//GEN-LAST:event_jButtonStopServerActionPerformed

    private void jButtonClientSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClientSaveActionPerformed
        // TODO add your handling code here:
        for (AGS_Client client : ags_clients) {
            if (!client.isAlive()) {
                    System.out.println(client.toString());
            }
        }
    }//GEN-LAST:event_jButtonClientSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AGSMLGeneratorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AGSMLGeneratorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AGSMLGeneratorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AGSMLGeneratorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AGSMLGeneratorGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonClientSave;
    private javax.swing.JButton jButtonDictionaryFile;
    private javax.swing.JButton jButtonIProcessFile;
    private javax.swing.JButton jButtonInputData;
    private javax.swing.JButton jButtonOutputFolder;
    private javax.swing.JButton jButtonStartServer;
    private javax.swing.JButton jButtonStopServer;
    private javax.swing.JComboBox<String> jComboBoxAGSDictionaryId;
    private javax.swing.JComboBox<String> jComboBoxAGSMLDataStructureId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextDictionaryFile;
    private javax.swing.JTextField jTextInputSource;
    private javax.swing.JTextField jTextLocalPort;
    private javax.swing.JTextField jTextOutputFolder;
    private javax.swing.JTextField jTextProcessFile;
    private javax.swing.JTextField jTextServer;
    private javax.swing.JTextField jTextServerPort;
    private javax.swing.JButton jbuttonGenerate;
    private javax.swing.JTextArea log;
    // End of variables declaration//GEN-END:variables
}
